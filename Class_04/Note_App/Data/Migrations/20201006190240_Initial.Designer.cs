// <auto-generated />
using Data.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(NotesDbContext))]
    [Migration("20201006190240_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain_Models.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("Tag");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");

                    b.HasData(
                        new { Id = 1, Color = "blue", Tag = 3, Text = "Buy Juice", UserId = 1 },
                        new { Id = 2, Color = "red", Tag = 4, Text = "Learn ASP.NET Core WebApi", UserId = 1 },
                        new { Id = 3, Color = "green", Tag = 1, Text = "Ask for raise", UserId = 2 },
                        new { Id = 4, Color = "white", Tag = 2, Text = "Do the dishes", UserId = 1 },
                        new { Id = 5, Color = "black", Tag = 4, Text = "Do the laundry", UserId = 2 },
                        new { Id = 6, Color = "orange", Tag = 2, Text = "Call Rob", UserId = 1 },
                        new { Id = 7, Color = "yellow", Tag = 3, Text = "Save the world!", UserId = 3 }
                    );
                });

            modelBuilder.Entity("Domain_Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, FirstName = "Bob", LastName = "Bobsky", Password = "12345", UserName = "bob007" },
                        new { Id = 2, FirstName = "Rob", LastName = "Robsky", Password = "67890", UserName = "R.R" },
                        new { Id = 3, FirstName = "James", LastName = "Bond", Password = "BondJamesBond", UserName = "Bond" }
                    );
                });

            modelBuilder.Entity("Domain_Models.Models.Note", b =>
                {
                    b.HasOne("Domain_Models.Models.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
